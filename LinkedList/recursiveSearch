public class LinkedList {
    
    public static class Node{
           int data;
           Node next;
            public Node(int data){
               this.data=data;
               this.next=null;
            }
       }
   
       public static Node head;
       public static Node tail;

   
       public void addFirst(int data){
           //create new node
            Node newNode= new Node(data);
           
         
            if(head==null){
               head=tail=newNode;
               return;
           }
           
           //newNode-next=head
           newNode.next=head;
   
           //head=newNode
           head=newNode;
           
       }
       public int helper(Node head,int key){
       //if LL is Empty
            if(head==null){
                return -1;
            }
            //if key is present on index 0 or head
            if(head.data==key){
                return 0;
            }
            int idx=helper(head.next, key);
            //if key is not present
            if(idx==-1){
                return -1;
            }
            //if key found
            return idx+1;
        }
        public int recursiveSrch(int key){
            return helper(head, key);
        }


       public void print(){
       Node temp=head;
       while(temp!=null){
           System.out.print(temp.data+"->");
           temp=temp.next;
       }
       System.out.println("null");
   }
   public static void main(String[] args) { 
       LinkedList ll=new LinkedList();
       ll.addFirst(2);
       ll.addFirst(1);
       ll.addFirst(1);
       ll.addFirst(2);
       ll.print();
       System.out.println(ll.recursiveSrch(1));
        }
      } 
