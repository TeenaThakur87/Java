public class LinkedList {
    
    public static class Node{
           int data;
           Node next;
            public Node(int data){
               this.data=data;
               this.next=null;
            }
       }
   
       public static Node head;
       public static Node tail;

   
       public void addFirst(int data){
           //create new node
            Node newNode= new Node(data);
           
         
            if(head==null){
               head=tail=newNode;
               return;
           }
           
           //newNode-next=head
           newNode.next=head;
   
           //head=newNode
           head=newNode;
           
       }
        public int removeLast(){
        //find the size of LL
            int sz=0;
            Node temp=head;
            while(temp!=null){
                temp=temp.next;
                sz++;
            }
            if(sz==0){
                System.out.println(" empty LL");
                return Integer.MIN_VALUE;
            }
            //If only one node
            else if(sz==1){
                int val=head.data;
                tail=head=null;
                return val;

            }
            
           Node prev=head;
            for(int i=0;i<sz-2;i++){
                prev=prev.next;
            }
            int val=prev.next.data;
            prev.next=null;
            tail=prev;
            return val;

        }


       public void print(){
       Node temp=head;
       while(temp!=null){
           System.out.print(temp.data+"->");
           temp=temp.next;
       }
       System.out.println("null");
   }
   public static void main(String[] args) { 
       LinkedList ll=new LinkedList();
       ll.addFirst(2);
       ll.addFirst(1);
       ll.addFirst(1);
       ll.addFirst(2);
       ll.print();
       ll.removeLast();
       ll.print();
       }
      } 
